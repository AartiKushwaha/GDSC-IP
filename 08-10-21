Q1) https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/

class Solution {
public:
    int shortestSubarray(vector<int>& A, int K) {
        int N = A.size(), res = N + 1;
        deque<int> d;
        for (int i = 0; i < N; i++) {
            if (i > 0)
                A[i] += A[i - 1];
            if (A[i] >= K)
                res = min(res, i + 1);
            while (d.size() > 0 && A[i] - A[d.front()] >= K)
                res = min(res, i - d.front()), d.pop_front();
            while (d.size() > 0 && A[i] <= A[d.back()])
                d.pop_back();
            d.push_back(i);
        }
        return res <= N ? res : -1;
    }
};

Q2) https://leetcode.com/problems/minimum-size-subarray-sum/

class Solution {
public:
    int minSubArrayLen(int s, vector<int>& A) {
        int i = 0, n = A.size(), res = n + 1;
        for (int j = 0; j < n; ++j) {
            s -= A[j];
            while (s <= 0) {
                res = min(res, j - i + 1);
                s += A[i++];
            }
        }
        return res % (n + 1);
    }
};



Q3) https://leetcode.com/problems/sliding-window-maximum/

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        deque<int> q;
        if(k>=nums.size()){
            ans.push_back(*max_element(nums.begin(),nums.end()));
            return ans;
        }
        if(k==1){
            return nums;
        }
        int i=0,j=0;
        while(j<nums.size())
        {
            while(q.size()>0 && nums[j]>q.back())
            {
                q.pop_back();
            }
            q.push_back(nums[j]);

            if(j-i+1<k)
            {
                j++;
            }
            else
            {
                ans.push_back(q.front());
                if(nums[i]==q.front())
                {
                    q.pop_front();
                }
                i++;
                j++;
            }
        }
        return ans;
    }
};

Q4) https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets




